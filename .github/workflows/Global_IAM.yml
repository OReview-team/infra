name: Global_IAM

on:
  workflow_dispatch:
    inputs:
      tasksByTerraform:
        description: 'Terraform Ïã§Ìñâ ÏûëÏóÖ ÏÑ†ÌÉù'
        required: true
        default: 'planToApply'
        options:
          - 'validate'
          - 'planToApply'
          - 'planToDestroy'
          - 'apply'
          - 'destroy'

permissions:
  contents: read

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format
        id: format
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -input=false

      - name: Terraform Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
        if: ${{ github.event.inputs.tasksByTerraform == 'validate' }}
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan To Apply
        if: ${{ github.event.inputs.tasksByTerraform == 'planToApply' }}
        id: planToApply
        run: |
          cd Global/IAM
          terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan To Destroy
        if: ${{ github.event.inputs.tasksByTerraform == 'planToDestroy' }}
        id: planToDestroy
        run: |
          cd Global/IAM
          terraform plan -destroy -no-color
        continue-on-error: true

      - name: Terraform Apply
        if: ${{ github.event.inputs.tasksByTerraform == 'apply' }}
        id: apply
        run: |
          cd Global/IAM
          terraform apply -auto-approve -no-color

      - name: Terraform Destroy
        if: ${{ github.event.inputs.tasksByTerraform == 'destroy' }}
        id: destroy
        run: |
          cd Global/IAM
          terraform destroy -auto-approve -no-color

      - name: Terraform Ïã§Ìñâ Í≤∞Í≥º Logging & Issue ÏÉùÏÑ±
        uses: actions/github-script@v7
        env:
          TASK: ${{ github.event.inputs.tasksByTerraform }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let info;
            let outcome;
            
            if(${{ process.env.TASK }} == 'validate') {
              info = ${{ steps.validate.outputs.stdout }};
              outcome = ${{ steps.validate.outcome }};
            }
            
            if(${{ process.env.TASK }} == 'planToApply' || ${{ process.env.TASK }} == 'planToDestroy') {
              info = ${{ steps.plan.outputs.stdout }};
              outcome = ${{ steps.plan.outcome }};
            }
            
            if(${{ process.env.TASK }} == 'apply') {
              info = ${{ steps.apply.outputs.stdout }};
              outcome = ${{ steps.apply.outcome }};
            }
            
            if(${{ process.env.TASK }} == 'destroy') {
              info = ${{ steps.destroy.outputs.stdout }};
              outcome = ${{ steps.destroy.outcome }};
            }
            
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            
            #### Terraform ${{ process.env.TASK }} üöÄ\`${outcome}\`
            
            <details><summary>Show ${{ process.env.TASK }}</summary>

            \`\`\`\n
            ${info}
            \`\`\`

            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })